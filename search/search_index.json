{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Plataforma de Microservi\u00e7os \u2013 Documenta\u00e7\u00e3o T\u00e9cnica","text":"<p>Aluno: Luigi Orlandi Quinze Grupo: Luigi Quinze e Leonardo Freitas  </p> <p>Projeto desenvolvido como parte da disciplina de Microservi\u00e7os, com foco em arquitetura distribu\u00edda, integra\u00e7\u00e3o via gateway, autentica\u00e7\u00e3o, observabilidade e entrega cont\u00ednua.</p>"},{"location":"#objetivo","title":"Objetivo","text":"<p>Criar uma plataforma RESTful com autentica\u00e7\u00e3o e integra\u00e7\u00e3o entre microsservi\u00e7os utilizando:</p> <ul> <li>FastAPI (Python) e Spring Boot (Java)</li> <li>Autentica\u00e7\u00e3o via JWT</li> <li>Gateway de entrada centralizado</li> <li>Observabilidade com Prometheus e Grafana</li> <li>Deploy automatizado via Jenkins e Kubernetes</li> </ul>"},{"location":"#microsservicos","title":"Microsservi\u00e7os","text":"Servi\u00e7o Linguagem Porta Descri\u00e7\u00e3o Gateway Java 8080 Entrada \u00fanica da plataforma Auth Java 8081 Login, JWT, roles Account Java 8082 Registro e consulta de usu\u00e1rios Product Java 8083 CRUD de produtos com Redis cache Order Java 8084 Cria\u00e7\u00e3o e listagem de pedidos Exchange Python 8085 Cota\u00e7\u00e3o de moedas via API externa"},{"location":"#seguranca","title":"Seguran\u00e7a","text":"<p>JWT - Token de Acesso</p> <p>Toda requisi\u00e7\u00e3o deve conter o header:</p> <pre><code>Authorization: Bearer &lt;seu_token&gt;\n</code></pre> <p>O Gateway \u00e9 respons\u00e1vel por validar este token e repassar as permiss\u00f5es aos demais servi\u00e7os.</p>"},{"location":"#observabilidade","title":"Observabilidade","text":"Ferramenta Fun\u00e7\u00e3o Prometheus Coleta de m\u00e9tricas Grafana Dashboards de visualiza\u00e7\u00e3o Redis Cache distribu\u00eddo de produtos"},{"location":"#cicd-deploy","title":"CI/CD &amp; Deploy","text":"Pipeline Jenkins <ul> <li>Jenkinsfile para cada servi\u00e7o</li> <li>Docker Buildx com multiplataforma (arm64, amd64)</li> <li>Deploy via Kubernetes (<code>kubectl</code>)</li> <li>Secrets &amp; ConfigMaps com arquivos YAML</li> </ul>"},{"location":"#documentacao-por-servico","title":"Documenta\u00e7\u00e3o por Servi\u00e7o","text":"<ul> <li><code>Product API</code></li> <li><code>Order API</code></li> <li><code>Exchange API</code></li> <li><code>Bottlenecks</code></li> <li><code>Jenkins &amp; Pipeline</code></li> </ul>"},{"location":"#apresentacao","title":"Apresenta\u00e7\u00e3o","text":"<p>Links Importantes</p> <ul> <li>V\u00eddeo de apresenta\u00e7\u00e3o do Projeto (2-3 minutos)</li> <li>V\u00eddeo de apresenta\u00e7\u00e3o Individual (2-3 minutos)</li> </ul>"},{"location":"#repositorios","title":"Reposit\u00f3rios","text":"<p>GitHub</p> <ul> <li>Reposit\u00f3rio principal</li> <li>Servi\u00e7os:<ul> <li>microservicos-account</li> <li>microservicos-account-service</li> <li>microservicos-auth</li> <li>microservicos-auth-service</li> <li>microservicos-gateway-service</li> <li>microservicos-order</li> <li>microservicos-order-service</li> <li>microservicos-product</li> <li>microservicos-product-service</li> </ul> </li> </ul> <p>\u00daltima atualiza\u00e7\u00e3o: 2025-06-03 Projeto entregue via Blackboard </p>"},{"location":"bottlenecks/","title":"Bottlenecks \u2013 Observabilidade e Cache","text":"<p>Este m\u00f3dulo da plataforma trata da mitiga\u00e7\u00e3o de gargalos (bottlenecks) atrav\u00e9s de solu\u00e7\u00f5es de monitoramento e cache: - Monitoramento com Prometheus + Grafana -  Cache com Redis</p>"},{"location":"bottlenecks/#grafana","title":"Grafana","text":"<p>Painel de visualiza\u00e7\u00e3o gr\u00e1fica dos dados coletados pelo Prometheus.</p>"},{"location":"bottlenecks/#kubernetes-grafanak8sk8syaml","title":"Kubernetes: <code>grafana/k8s/k8s.yaml</code>","text":"<ul> <li>Cria:</li> <li><code>Deployment</code>: com imagem <code>grafana/grafana-enterprise</code></li> <li><code>Service</code>: exp\u00f5e a porta <code>3000</code></li> <li>Admin password: <code>admin</code></li> <li>Armazena os dashboards em volume <code>emptyDir</code></li> </ul> <p>Print do dashboard do Grafana aqui </p>"},{"location":"bottlenecks/#prometheus","title":"Prometheus","text":"<p>Respons\u00e1vel por coletar m\u00e9tricas dos microsservi\u00e7os (via <code>/actuator/prometheus</code>).</p>"},{"location":"bottlenecks/#kubernetes-prometheusk8sk8syaml","title":"Kubernetes: <code>prometheus/k8s/k8s.yaml</code>","text":"<ul> <li>Cria:</li> <li><code>ConfigMap</code> com <code>prometheus.yml</code>:     <pre><code>scrape_configs:\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n</code></pre></li> <li><code>Deployment</code>: com imagem <code>prom/prometheus:latest</code></li> <li><code>Service</code>: exp\u00f5e a porta <code>9090</code></li> </ul> <p>Print do Prometheus aqui </p>"},{"location":"bottlenecks/#redis-cache-in-memory","title":"\u26a1 Redis \u2013 Cache In-Memory","text":"<p>Utilizado principalmente no <code>product-service</code> para: - Caching da lista de produtos (<code>GET /product</code>) - Redu\u00e7\u00e3o da lat\u00eancia (80ms \u2192 5ms) - Desacoplamento da base de dados</p>"},{"location":"bottlenecks/#kubernetes-redisk8sk8syaml","title":"Kubernetes: <code>redis/k8s/k8s.yaml</code>","text":"<ul> <li>Cria:</li> <li><code>Deployment</code>: com autentica\u00e7\u00e3o via <code>redis-secret</code></li> <li><code>Volumes</code>:<ul> <li><code>redis-config</code>: montado em <code>/etc/redis</code></li> <li><code>redis-data</code>: persistente via <code>redis-pvc</code></li> </ul> </li> <li><code>Readiness</code> e <code>Liveness</code> probes com <code>redis-cli ping</code></li> <li>Imagem: <code>redis:7-alpine</code></li> </ul> <p>Print mostrando Redis em execu\u00e7\u00e3o aqui </p>"},{"location":"bottlenecks/#metricas-observadas","title":"\ud83d\udd0d M\u00e9tricas observadas","text":"Servi\u00e7o M\u00e9trica Descri\u00e7\u00e3o Todos <code>http_server_requests_seconds_*</code> Lat\u00eancia e contagem de requests <code>product</code> <code>cache.gets</code>, <code>cache.puts</code> Hits/misses de cache <code>order</code> <code>order_total_sum</code> (custom) Soma total de pedidos gerados"},{"location":"bottlenecks/#conclusao","title":"Conclus\u00e3o","text":"<ul> <li>A stack Prometheus + Grafana + Redis melhora tanto a observabilidade quanto a performance.</li> <li>Ajuda a antecipar problemas (ex: mem\u00f3ria, CPU, falhas de endpoint).</li> <li>Reduz carga de banco de dados e melhora tempo de resposta.</li> </ul> <p>Recomenda-se manter esse setup ativo mesmo em produ\u00e7\u00e3o local (Minikube ou Docker Desktop).</p> <p>\u00daltima revis\u00e3o: 2025-06-03</p>"},{"location":"cicd/","title":"CI/CD","text":""},{"location":"cicd/#1-cicd","title":"1. CI/CD","text":""},{"location":"configAWS/","title":"Configura\u00e7\u00e3o da AWS CLI","text":"<p>Este guia descreve os passos realizados para configurar o acesso \u00e0 AWS a partir da m\u00e1quina local, utilizando a AWS CLI e uma chave de acesso IAM.</p>"},{"location":"configAWS/#1-criacao-do-usuario-iam","title":"1. Cria\u00e7\u00e3o do Usu\u00e1rio IAM","text":"<p>No console da AWS:</p> <ul> <li>Acesse o servi\u00e7o <code>IAM</code></li> <li>V\u00e1 at\u00e9 Usu\u00e1rios &gt; Criar usu\u00e1rio</li> <li>D\u00ea permiss\u00f5es apropriadas (por exemplo: <code>AdministratorAccess</code>)</li> <li>Anote a chave gerada:</li> <li><code>Access Key ID</code></li> <li><code>Secret Access Key</code></li> </ul> <p></p>"},{"location":"configAWS/#2-geracao-da-chave-de-acesso","title":"2. Gera\u00e7\u00e3o da Chave de Acesso","text":"<p>Ap\u00f3s criar o usu\u00e1rio, uma chave de acesso \u00e9 fornecida.</p> <ul> <li>Guarde com seguran\u00e7a!</li> <li>Necess\u00e1ria para configurar a AWS CLI.</li> </ul>"},{"location":"configAWS/#3-configuracao-da-aws-cli","title":"3. Configura\u00e7\u00e3o da AWS CLI","text":"<p>No terminal, execute:</p> <pre><code>aws configure\n</code></pre> <p>Insira as informa\u00e7\u00f5es solicitadas:</p> <pre><code>AWS Access Key ID:     &lt;copiado da AWS&gt;\nAWS Secret Access Key: &lt;copiado da AWS&gt;\nDefault region name:   us-east-1\nDefault output format: json\n</code></pre> <p>\ud83d\udcf8 Print da configura\u00e7\u00e3o no terminal </p>"},{"location":"configAWS/#4-verificacao-da-configuracao","title":"4. Verifica\u00e7\u00e3o da Configura\u00e7\u00e3o","text":"<p>Comando para testar:</p> <pre><code>aws sts get-caller-identity\n</code></pre> <p>Retorno esperado:</p> <pre><code>{\n    \"UserId\": \"AKIA....\",\n    \"Account\": \"123456789012\",\n    \"Arn\": \"arn:aws:iam::123456789012:user/platform-eks\"\n}\n</code></pre> <p>\u00daltima configura\u00e7\u00e3o realizada em 2025-06-03 com sucesso!</p>"},{"location":"configEKS/","title":"Configura\u00e7\u00e3o do EKS \u2013 Amazon Elastic Kubernetes Service","text":"<p>Este documento apresenta o processo de configura\u00e7\u00e3o de infraestrutura usando o Amazon EKS. O EKS \u00e9 o servi\u00e7o gerenciado da AWS para orquestra\u00e7\u00e3o de containers com Kubernetes.</p>"},{"location":"configEKS/#1-criacao-do-papel-iam-role","title":"1. Cria\u00e7\u00e3o do Papel (IAM Role)","text":"<p>O primeiro passo \u00e9 criar uma IAM Role com permiss\u00f5es de administra\u00e7\u00e3o para o cluster EKS. Essa role ser\u00e1 associada ao cluster para que possa operar os recursos no ambiente.</p> <p></p>"},{"location":"configEKS/#2-criacao-da-vpc-com-subnets","title":"2. Cria\u00e7\u00e3o da VPC com Subnets","text":"<p>Usamos o assistente da AWS CloudFormation para gerar uma VPC com subnets p\u00fablicas e privadas, conforme template oficial da AWS para clusters EKS.</p> <p></p>"},{"location":"configEKS/#3-criacao-do-cluster-eks","title":"3. Cria\u00e7\u00e3o do Cluster EKS","text":"<p>Com a VPC e a Role configuradas, seguimos com a cria\u00e7\u00e3o do cluster no painel do EKS, atribuindo:</p> <ul> <li>Nome: <code>eks-store</code></li> <li>Vers\u00e3o do Kubernetes: <code>1.32</code></li> <li>Fun\u00e7\u00e3o (IAM Role): a criada anteriormente</li> <li>VPC: a provisionada na etapa anterior</li> </ul> <p></p> <p>Acesso ao Cluster</p> <p>Passos Depois disso, acessamos o cluster por meio do aws cli com o seguinte comando:</p> <pre><code>aws eks update-kubeconfig --region us-east-2 --name\u00a0eks-store, conectando-nos ao cluster\n</code></pre> Criando Kubernetes <p>k8s Com o cluster criado, criamos os kubernets de cada microservicos e bottlenecks.  Aqui est\u00e1 um exemplo de k8s.yaml:</p> <pre><code>    apiVersion: apps/v1\n    kind: Deployment\n    metadata:\n    name: gateway\n    spec:\n    replicas: 1\n    selector:\n        matchLabels:\n        app: gateway\n    template:\n        metadata:\n        labels:\n            app: gateway\n        annotations:\n            prometheus.io/scrape: \"true\"\n            prometheus.io/port: \"8080\"\n            prometheus.io/path: \"/actuator/prometheus\"\n        spec:\n    containers:\n    - name: gateway\n      image: leosfreitas/gateway:latest\n      imagePullPolicy: Always\n      ports:\n        - containerPort: 8080\n      resources:\n        requests:\n          memory: \"200Mi\"\n          cpu: \"50m\"\n        limits:\n          memory: \"300Mi\"\n          cpu: \"200m\"\n\n    apiVersion: v1\n    kind: Service\n    metadata:\n    name: gateway\n    labels:\n        app: gateway\n    spec:\n    type: LoadBalancer\n    ports:\n        - port: 80\n        protocol: TCP\n        targetPort: 8080\n    selector:\n        app: gateway\n</code></pre> Kubernetes Criados <p></p> Exemplo de requisi\u00e7\u00e3o para a m\u00e1quina. <p></p>"},{"location":"configEKS/#status-final","title":"Status Final","text":"Recurso Status IAM Role \u2705 Criado e associado VPC/Subnets \u2705 Criado via CloudFormation Cluster EKS \u2705 Ativo e saud\u00e1vel <p>\u00daltima atualiza\u00e7\u00e3o: 2025-06-03</p>"},{"location":"exchange/","title":"Exchange API \u2013 Convers\u00e3o de Moedas","text":"<p>Este microsservi\u00e7o exp\u00f5e uma rota p\u00fablica para convers\u00e3o de moedas, utilizando uma API de terceiros (como AwesomeAPI ou ExchangeRate-API) e aplicando uma taxa de spread configur\u00e1vel.</p>"},{"location":"exchange/#metodo-unico-get-exchangefrom_currencyto_currency","title":"M\u00e9todo \u00danico: <code>GET /exchange/{from_currency}/{to_currency}</code>","text":"<p>Converte o valor de uma moeda de origem (<code>from_currency</code>) para uma moeda de destino (<code>to_currency</code>), aplicando um spread percentual.</p>"},{"location":"exchange/#exemplo-de-chamada","title":"\ud83d\udd38 Exemplo de chamada","text":"<pre><code>GET /exchange/USD/EUR\nAuthorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"exchange/#exemplo-de-resposta-200-ok","title":"\ud83d\udd39 Exemplo de resposta <code>200 OK</code>","text":"<pre><code>{\n  \"sell\": 0.82,\n  \"buy\": 0.80,\n  \"date\": \"2025-09-01T14:23:42\",\n  \"account_id\": \"0195ae95-5be7-7dd3-b35d-7a7d87c404fb\"\n}\n</code></pre> <p>Print da chamada funcionando aqui </p>"},{"location":"exchange/#regras-de-negocio","title":"Regras de Neg\u00f3cio","text":"<ul> <li>O usu\u00e1rio deve estar autenticado (JWT v\u00e1lido).</li> <li>A resposta exibe:</li> <li><code>sell</code>: cota\u00e7\u00e3o de venda com spread aplicado</li> <li><code>buy</code>: cota\u00e7\u00e3o de compra com spread aplicado</li> <li><code>date</code>: timestamp da requisi\u00e7\u00e3o</li> <li><code>account_id</code>: extra\u00eddo do <code>jti</code> presente no JWT</li> </ul>"},{"location":"exchange/#spread","title":"Spread","text":"<p>O spread \u00e9 definido pela vari\u00e1vel de ambiente:</p> <pre><code>SPREAD_PERCENTAGE=2.0  # padr\u00e3o: 2%\n</code></pre> <p>F\u00f3rmulas:</p> <pre><code>buy  = base_rate * (1 - spread/2)\nsell = base_rate * (1 + spread/2)\n</code></pre>"},{"location":"exchange/#autenticacao","title":"Autentica\u00e7\u00e3o","text":"<p>JWT baseado em <code>Authorization: Bearer &lt;token&gt;</code> - A chave secreta \u00e9 decodificada de Base64 (<code>JWT_SECRET_KEY</code>) - Algoritmo padr\u00e3o: <code>HS256</code></p>"},{"location":"exchange/#dependencias-externas","title":"Depend\u00eancias Externas","text":"<ul> <li> <p><code>.env</code> com:   <pre><code>EXCHANGE_API_BASE_URL=https://api.exchangerate-api.com/v4\nEXCHANGE_API_KEY=SUA_CHAVE\nJWT_SECRET_KEY=&lt;base64&gt;\nJWT_ALGORITHM=HS256\nSPREAD_PERCENTAGE=2.0\n</code></pre></p> </li> <li> <p>Bibliotecas:</p> </li> <li><code>fastapi</code>, <code>requests</code>, <code>python-jose</code>, <code>pydantic</code>, <code>python-dotenv</code></li> </ul>"},{"location":"exchange/#erros-comuns","title":"Erros comuns","text":"C\u00f3digo Causa <code>401</code> Token inv\u00e1lido ou ausente <code>404</code> Moeda de destino n\u00e3o encontrada <code>502</code> Falha na chamada \u00e0 API externa"},{"location":"exchange/#como-rodar-local","title":"Como rodar local","text":"<pre><code># Instalar depend\u00eancias\npip install -r requirements.txt\n\n# Rodar API\nuvicorn app:app --reload --port 8080\n</code></pre> <p>A documenta\u00e7\u00e3o Swagger estar\u00e1 dispon\u00edvel em: <code>http://localhost:8080/docs</code></p> <p>\u00daltima atualiza\u00e7\u00e3o da rota: <code>GET /exchange/{from}/{to}</code></p>"},{"location":"jenkins/","title":"Jenkins \u2013 CI/CD da Plataforma","text":"<p>Este documento descreve a configura\u00e7\u00e3o da pipeline Jenkins para build, push e deploy dos microsservi\u00e7os da plataforma. Tamb\u00e9m detalha o endpoint <code>/info</code> do Gateway, usado para debug e verifica\u00e7\u00e3o de ambiente em tempo de execu\u00e7\u00e3o.</p>"},{"location":"jenkins/#pipeline-jenkins","title":"Pipeline Jenkins","text":""},{"location":"jenkins/#jenkinsfile-exemplo-do-account-service","title":"Jenkinsfile (exemplo do <code>account-service</code>)","text":"<pre><code>pipeline {\n    agent any\n    environment {\n        SERVICE = 'account'\n        NAME = \"humbertosandmann/${env.SERVICE}\"\n    }\n    stages {\n        stage('Depend\u00eancias') {\n            steps {\n                build job: 'account', wait: true\n            }\n        }\n        stage('Build') { \n            steps {\n                sh 'mvn -B -DskipTests clean package'\n            }\n        }      \n        stage('Build &amp; Push Image') {\n            steps {\n                withCredentials([usernamePassword(\n                    credentialsId: 'dockerhub-credential',\n                    usernameVariable: 'USERNAME',\n                    passwordVariable: 'TOKEN')])\n                {\n                    sh \"docker login -u $USERNAME -p $TOKEN\"\n                    sh \"docker buildx create --use --platform=linux/arm64,linux/amd64 --node multi-platform-builder-${env.SERVICE} --name multi-platform-builder-${env.SERVICE}\"\n                    sh \"docker buildx build --platform=linux/arm64,linux/amd64 --push --tag ${env.NAME}:latest --tag ${env.NAME}:${env.BUILD_ID} -f Dockerfile .\"\n                    sh \"docker buildx rm --force multi-platform-builder-${env.SERVICE}\"\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>Console Jenkins</p> <p></p>"},{"location":"jenkins/#credenciais-ambiente","title":"Credenciais &amp; Ambiente","text":"Chave Tipo Onde usar <code>dockerhub-credential</code> <code>usernamePassword</code> Usado no stage de push da imagem <code>.env</code> Arquivo com vari\u00e1veis Utilizado para definir secrets e configs nos microsservi\u00e7os"},{"location":"jenkins/#servicos-com-jenkinsfile","title":"Servi\u00e7os com Jenkinsfile","text":"<p>Todos os microsservi\u00e7os a seguir possuem um <code>Jenkinsfile</code> pr\u00f3prio:</p> <ul> <li><code>account-service</code></li> <li><code>auth-service</code></li> <li><code>gateway-service</code></li> <li><code>product-service</code></li> <li><code>order-service</code></li> </ul>"},{"location":"jenkins/#teste-de-ambiente-via-info-gateway","title":"Teste de Ambiente via <code>/info</code> \u2013 Gateway","text":""},{"location":"jenkins/#endpoint","title":"Endpoint","text":"<pre><code>GET /info\n</code></pre>"},{"location":"jenkins/#exemplo-de-resposta-200-ok","title":"Exemplo de resposta <code>200 OK</code>","text":"<pre><code>{\n  \"hostname\": \"minikube\",\n  \"os.arch\": \"amd64\",\n  \"os.name\": \"Linux\",\n  \"os.version\": \"5.15.0\",\n  \"java.version\": \"17.0.8\"\n}\n</code></pre> <p>Utiliza\u00e7\u00e3o</p> <ul> <li>Validar o ambiente de execu\u00e7\u00e3o do gateway  </li> <li>Verificar arquitetura, vers\u00e3o do Java e path do <code>.jar</code> </li> <li>Diagn\u00f3stico de problemas em builds de produ\u00e7\u00e3o</li> </ul> <p>Rota Funcionando</p> <p></p>"},{"location":"jenkins/#deploy","title":"Deploy","text":"<p>Cada imagem gerada \u00e9 publicada no Docker Hub e posteriormente usada nos manifestos do Kubernetes local (Minikube ou Kind) ou em nuvem.</p> Etapa Ferramenta Build &amp; push Jenkins + Docker Buildx Deploy Kubectl + Jenkins Job ou manual Monitoramento <code>/info</code> + Prometheus <p>\u00daltima atualiza\u00e7\u00e3o da pipeline: 2025-06-03</p>"},{"location":"order/","title":"Order API \u2013 Pedidos do Usu\u00e1rio","text":"<p>Microsservi\u00e7o respons\u00e1vel pela cria\u00e7\u00e3o e consulta de pedidos, com base em produtos cadastrados. Todas as requisi\u00e7\u00f5es devem conter o header <code>id-account</code> identificando o cliente.</p>"},{"location":"order/#post-order-criar-pedido","title":"POST <code>/order</code> \u2013 Criar Pedido","text":"<p>Cria um novo pedido para o usu\u00e1rio autenticado.</p> Requisi\u00e7\u00e3o <pre><code>POST /order\nid-account: 0195ae95-5be7-7dd3-b35d-7a7d87c404fb\nContent-Type: application/json\n\n{\n  \"items\": [\n    { \"idProduct\": \"0195abfb-7074-73a9-9d26-b4b9fbaab0a8\", \"quantity\": 2 },\n    { \"idProduct\": \"0195abfe-e416-7052-be3b-27cdaf12a984\", \"quantity\": 1 }\n  ]\n}\n</code></pre> Resposta <code>200 OK</code> <pre><code>{\n  \"id\": \"0195ac33-73e5-7cb3-90ca-7b5e7e549569\",\n  \"date\": \"2025-09-01T12:30:00\",\n  \"items\": [...],\n  \"total\": 26.44\n}\n</code></pre> <p>Print</p> <p></p>"},{"location":"order/#get-order-listar-pedidos-do-usuario","title":"GET <code>/order</code> \u2013 Listar Pedidos do Usu\u00e1rio","text":"<p>Retorna um resumo de todos os pedidos do <code>id-account</code>.</p> Requisi\u00e7\u00e3o <pre><code>GET /order\nid-account: 0195ae95-5be7-7dd3-b35d-7a7d87c404fb\n</code></pre> Resposta <code>200 OK</code> <pre><code>[\n  {\n    \"id\": \"0195ac33-73e5-7cb3-90ca-7b5e7e549569\",\n    \"date\": \"2025-09-01T12:30:00\",\n    \"total\": 26.44\n  },\n  {\n    \"id\": \"0195ac33-cbbd-7a6e-a15b-b85402cf143f\",\n    \"date\": \"2025-10-09T03:21:57\",\n    \"total\": 18.6\n  }\n]\n</code></pre> <p>Print</p> <p></p>"},{"location":"order/#get-orderid-buscar-detalhes-do-pedido","title":"GET <code>/order/{id}</code> \u2013 Buscar Detalhes do Pedido","text":"<p>Retorna os detalhes de um pedido espec\u00edfico do usu\u00e1rio.</p> Requisi\u00e7\u00e3o <pre><code>GET /order/0195ac33-73e5-7cb3-90ca-7b5e7e549569\nid-account: 0195ae95-5be7-7dd3-b35d-7a7d87c404fb\n</code></pre> Resposta <code>200 OK</code> <pre><code>{\n  \"id\": \"0195ac33-73e5-7cb3-90ca-7b5e7e549569\",\n  \"date\": \"2025-09-01T12:30:00\",\n  \"items\": [\n    {\n      \"id\": \"01961b9a-bca2-78c4-9be1-7092b261f217\",\n      \"product\": { \"id\": \"0195abfb-7074-73a9-9d26-b4b9fbaab0a8\" },\n      \"quantity\": 2,\n      \"total\": 20.24\n    },\n    {\n      \"id\": \"01961b9b-08fd-76a5-8508-cdb6cd5c27ab\",\n      \"product\": { \"id\": \"0195abfe-e416-7052-be3b-27cdaf12a984\" },\n      \"quantity\": 10,\n      \"total\": 6.2\n    }\n  ],\n  \"total\": 26.44\n}\n</code></pre> <p>Poss\u00edveis Erros</p> C\u00f3digo Motivo 404 Pedido n\u00e3o pertence ao usu\u00e1rio ou inexistente <p>Print</p> <p></p>"},{"location":"order/#autenticacao-e-cabecalhos","title":"Autentica\u00e7\u00e3o e Cabe\u00e7alhos","text":"<p>Requisito de Autentica\u00e7\u00e3o</p> <p>Todos os endpoints exigem o cabe\u00e7alho: <pre><code>id-account: &lt;UUID do usu\u00e1rio autenticado&gt;\n</code></pre></p> <ul> <li>Extra\u00eddo do token JWT pela camada de autentica\u00e7\u00e3o no gateway.</li> </ul>"},{"location":"order/#observabilidade","title":"Observabilidade","text":"<p>M\u00e9tricas Ativadas</p> <ul> <li><code>http_server_requests_seconds_count{uri=\"/order\"}</code></li> <li><code>order_total_sum</code></li> <li>Integra\u00e7\u00e3o com Prometheus e Grafana habilitada.</li> </ul>"},{"location":"order/#regras-e-validacoes","title":"Regras e Valida\u00e7\u00f5es","text":"<p>Valida\u00e7\u00f5es do Servi\u00e7o</p> <ul> <li><code>idProduct</code> precisa existir no cat\u00e1logo.</li> <li><code>quantity &gt;= 1</code>.</li> <li><code>total</code> \u00e9 calculado dinamicamente.</li> </ul>"},{"location":"order/#execucao-local","title":"Execu\u00e7\u00e3o Local","text":"Comando <pre><code>./mvnw spring-boot:run\n</code></pre> <ul> <li>Interface Swagger dispon\u00edvel em:   <pre><code>http://localhost:8080/swagger-ui.html\n</code></pre></li> </ul> <p>\u00daltima atualiza\u00e7\u00e3o da interface: <code>OrderController.java</code></p>"},{"location":"paas/","title":"Utiliza\u00e7\u00e3o de PaaS no Projeto","text":""},{"location":"paas/#onde-utilizamos-paas","title":"Onde Utilizamos PaaS","text":"<p>Nosso grupo utilizou Amazon EKS (Elastic Kubernetes Service) como plataforma PaaS principal para hospedar e gerenciar nossa arquitetura de microsservi\u00e7os.</p>"},{"location":"paas/#servicos-paas-implementados","title":"Servi\u00e7os PaaS Implementados","text":""},{"location":"paas/#1-amazon-eks-plataforma-principal","title":"1. Amazon EKS - Plataforma Principal","text":"<p>\u2022\u2060  \u2060Fun\u00e7\u00e3o: Orquestra\u00e7\u00e3o e gerenciamento dos containers \u2022\u2060  \u2060Benef\u00edcios: Elimina\u00e7\u00e3o da complexidade de configura\u00e7\u00e3o do Kubernetes \u2022\u2060  \u2060Uso: Deploy automatizado de 5 microsservi\u00e7os (Gateway, Auth, Account, Product, Order)</p>"},{"location":"paas/#2-amazon-rds-banco-de-dados-gerenciado","title":"2. Amazon RDS - Banco de Dados Gerenciado","text":"<p>\u2022\u2060  \u2060Fun\u00e7\u00e3o: Banco de dados PostgreSQL gerenciado \u2022\u2060  \u2060Benef\u00edcios: Backup autom\u00e1tico, patches, alta disponibilidade \u2022\u2060  \u2060Uso: Armazenamento persistente para todos os microsservi\u00e7os</p>"},{"location":"paas/#3-docker-hub-registry-de-containers","title":"3. Docker Hub - Registry de Containers","text":"<p>\u2022\u2060  \u2060Fun\u00e7\u00e3o: Armazenamento e versionamento de imagens Docker \u2022\u2060  \u2060Benef\u00edcios: Gratuito, integra\u00e7\u00e3o simples com CI/CD \u2022\u2060  \u2060Uso: Hosting das imagens dos microsservi\u00e7os (leosfreitas/gateway, leosfreitas/product, etc.)</p>"},{"location":"paas/#4-jenkins-cicd-platform","title":"4. Jenkins - CI/CD Platform","text":"<p>\u2022\u2060  \u2060Fun\u00e7\u00e3o: Automa\u00e7\u00e3o de build, test e deploy \u2022\u2060  \u2060Benef\u00edcios: Pipeline automatizado, integra\u00e7\u00e3o com Kubernetes \u2022\u2060  \u2060Uso: Build autom\u00e1tico e deploy no EKS via pipeline</p>"},{"location":"paas/#como-utilizamos","title":"Como Utilizamos","text":""},{"location":"paas/#arquitetura-paas-implementada","title":"Arquitetura PaaS Implementada","text":"<p>\u2060\u202fmermaid graph TB     Dev[Desenvolvedor] --&gt; Jenkins[Jenkins CI/CD]     Jenkins --&gt; DockerHub[Docker Hub]     Jenkins --&gt; EKS[Amazon EKS]</p> <pre><code>subgraph \"Amazon EKS - PaaS\"\n    Gateway[Gateway Service]\n    Auth[Auth Service]\n    Account[Account Service]\n    Product[Product Service]\n    Order[Order Service]\n\n    Gateway --&gt; Auth\n    Gateway --&gt; Account\n    Gateway --&gt; Product\n    Gateway --&gt; Order\nend\n\nEKS --&gt; RDS[(PostgreSQL Pod)]\nGateway --&gt; LoadBalancer[EKS LoadBalancer]\n\nUsers[Usu\u00e1rios] --&gt; LoadBalancer\nLoadBalancer --&gt; Gateway\n</code></pre> <p>\u2060</p>"},{"location":"paas/#processo-de-deploy-paas","title":"Processo de Deploy PaaS","text":""},{"location":"paas/#1-desenvolvimento-e-build","title":"1. Desenvolvimento e Build","text":"<p>\u2060\u202fyaml</p>"},{"location":"paas/#pipeline-automatizado","title":"Pipeline automatizado","text":"<p>C\u00f3digo \u2192 Jenkins \u2192 Maven Build \u2192 Docker Build \u2192 Push ECR \u202f\u2060</p>"},{"location":"paas/#2-deploy-automatizado-no-eks","title":"2. Deploy Automatizado no EKS","text":"<p>\u2060\u202fbash</p>"},{"location":"paas/#comando-executado-pelo-jenkins","title":"Comando executado pelo Jenkins","text":"<p>kubectl set image deployment/gateway gateway=leosfreitas/gateway:5 kubectl rollout status deployment/gateway \u202f\u2060</p>"},{"location":"paas/#3-escalabilidade-automatica","title":"3. Escalabilidade Autom\u00e1tica","text":"<p>\u2060\u202fyaml</p>"},{"location":"paas/#hpa-configurado-para-scaling-automatico","title":"HPA configurado para scaling autom\u00e1tico","text":"<p>apiVersion: autoscaling/v2 kind: HorizontalPodAutoscaler metadata:   name: gateway-hpa spec:   minReplicas: 1   maxReplicas: 10   targetCPUUtilizationPercentage: 50 \u202f\u2060</p>"},{"location":"paas/#beneficios-obtidos-com-paas","title":"Benef\u00edcios Obtidos com PaaS","text":""},{"location":"paas/#reducao-de-complexidade","title":"Redu\u00e7\u00e3o de Complexidade","text":"<p>\u2022\u2060  \u2060Antes: Configurar Kubernetes manualmente, gerenciar masters, workers \u2022\u2060  \u2060Com PaaS: EKS gerencia toda infraestrutura Kubernetes automaticamente</p>"},{"location":"paas/#focus-no-codigo","title":"Focus no C\u00f3digo","text":"<p>\u2022\u2060  \u2060Desenvolvedores se concentram apenas na l\u00f3gica de neg\u00f3cio \u2022\u2060  \u2060Infraestrutura \u00e9 abstra\u00edda e gerenciada pela AWS</p>"},{"location":"paas/#escalabilidade-automatica","title":"Escalabilidade Autom\u00e1tica","text":"<p>\u2022\u2060  \u2060HPA escala pods baseado em CPU/mem\u00f3ria \u2022\u2060  \u2060EKS adiciona/remove nodes automaticamente \u2022\u2060  \u2060ELB distribui carga automaticamente</p>"},{"location":"paas/#alta-disponibilidade","title":"Alta Disponibilidade","text":"<p>\u2022\u2060  \u2060Multi-AZ deployment autom\u00e1tico \u2022\u2060  \u2060Self-healing pods reiniciam automaticamente \u2022\u2060  \u2060Rolling updates sem downtime</p>"},{"location":"paas/#integracao-nativa","title":"Integra\u00e7\u00e3o Nativa","text":"<p>\u2022\u2060  \u2060ECR integrado com EKS para pull de imagens \u2022\u2060  \u2060CloudWatch para logs e m\u00e9tricas autom\u00e1ticas \u2022\u2060  \u2060IAM para seguran\u00e7a integrada</p>"},{"location":"paas/#comparacao-sem-paas-vs-com-paas","title":"Compara\u00e7\u00e3o: Sem PaaS vs Com PaaS","text":"Aspecto Sem PaaS (IaaS) Com PaaS (EKS) Setup Kubernetes Configura\u00e7\u00e3o manual complexa Gerenciado automaticamente Atualiza\u00e7\u00f5es Patches manuais do K8s Atualiza\u00e7\u00f5es autom\u00e1ticas Scaling Configura\u00e7\u00e3o manual HPA + Cluster Autoscaler Monitoramento Setup manual CloudWatch integrado Seguran\u00e7a Configura\u00e7\u00e3o manual IAM + Security Groups Backup Scripts personalizados Backup autom\u00e1tico Tempo de Setup Semanas Horas"},{"location":"paas/#casos-de-uso-paas-no-projeto","title":"Casos de Uso PaaS no Projeto","text":""},{"location":"paas/#1-microsservicos-stateless","title":"1. Microsservi\u00e7os Stateless","text":"<p>\u2060\u202fyaml</p>"},{"location":"paas/#gateway-service-paas-ideal-para-apps-stateless","title":"Gateway Service - PaaS ideal para apps stateless","text":"<p>spec:   replicas: 2   template:     spec:       containers:       - name: gateway         image: leosfreitas/gateway:latest         resources:           requests:             cpu: 50m             memory: 200Mi \u202f\u2060</p>"},{"location":"paas/#2-database-como-servico","title":"2. Database como Servi\u00e7o","text":"<p>\u2060\u202fyaml</p>"},{"location":"paas/#postgresql-gerenciado-sem-manutencao-manual","title":"PostgreSQL gerenciado - sem manuten\u00e7\u00e3o manual","text":"<p>DATABASE_URL: jdbc:postgresql://postgres:5432/store</p>"},{"location":"paas/#rds-gerencia-backups-patches-failover","title":"RDS gerencia: backups, patches, failover","text":"<p>\u2060</p>"},{"location":"paas/#3-cicd-integrado","title":"3. CI/CD Integrado","text":"<p>\u2060\u202fgroovy // Pipeline Jenkins integrado com PaaS stage('Deploy to EKS') {     kubectl set image deployment/product product=${IMAGE}:${BUILD_ID}     // PaaS gerencia: rolling update, health checks, rollback } \u202f\u2060</p>"},{"location":"paas/#resultados-quantitativos","title":"Resultados Quantitativos","text":""},{"location":"paas/#tempo-de-desenvolvimento","title":"Tempo de Desenvolvimento","text":"<p>\u2022\u2060  \u2060Redu\u00e7\u00e3o de 70% no tempo de configura\u00e7\u00e3o de infraestrutura \u2022\u2060  \u2060Deploy automatizado em 3 minutos vs 30 minutos manual</p>"},{"location":"paas/#disponibilidade","title":"Disponibilidade","text":"<p>\u2022\u2060  \u206099.9% uptime com PaaS vs 95% com infraestrutura manual \u2022\u2060  \u2060Zero downtime deploys com rolling updates</p>"},{"location":"paas/#escalabilidade","title":"Escalabilidade","text":"<p>\u2022\u2060  \u2060Scaling autom\u00e1tico de 1 para 10 pods em teste de carga \u2022\u2060  \u2060Resposta em segundos vs minutos para scaling manual</p>"},{"location":"paas/#custos-operacionais","title":"Custos Operacionais","text":"<p>\u2022\u2060  \u2060$158/m\u00eas para toda a infraestrutura PaaS \u2022\u2060  \u2060ROI positivo comparado a gerenciamento manual</p>"},{"location":"paas/#licoes-aprendidas","title":"Li\u00e7\u00f5es Aprendidas","text":""},{"location":"paas/#vantagens-do-paas","title":"Vantagens do PaaS","text":"<p>1.\u2060 \u2060Produtividade: Foco total no desenvolvimento 2.\u2060 \u2060Confiabilidade: Infraestrutura gerenciada por especialistas 3.\u2060 \u2060Agilidade: Deploy e scaling autom\u00e1ticos 4.\u2060 \u2060Economia: Menos recursos para gerenciar infraestrutura</p>"},{"location":"paas/#desafios-enfrentados","title":"Desafios Enfrentados","text":"<p>1.\u2060 \u2060Vendor Lock-in: Depend\u00eancia da AWS 2.\u2060 \u2060Custos: Necessidade de monitoramento constante 3.\u2060 \u2060Complexidade: Curva de aprendizado inicial do EKS 4.\u2060 \u2060Rede: Configura\u00e7\u00e3o de comunica\u00e7\u00e3o entre microsservi\u00e7os</p>"},{"location":"paas/#conclusao","title":"Conclus\u00e3o","text":"<p>A utiliza\u00e7\u00e3o de PaaS (Amazon EKS) permitiu ao nosso grupo focar na arquitetura de microsservi\u00e7os e l\u00f3gica de neg\u00f3cio, enquanto a AWS gerencia toda a complexidade da infraestrutura Kubernetes. </p> <p>O resultado foi uma aplica\u00e7\u00e3o altamente escal\u00e1vel, resiliente e f\u00e1cil de manter, demonstrando o valor real do modelo PaaS para desenvolvimento moderno de aplica\u00e7\u00f5es.</p>"},{"location":"product/","title":"Product API \u2013 Endpoints","text":"<p>Interface REST do microsservi\u00e7o product, implementada com Feign para uso interno entre microsservi\u00e7os. Todos os endpoints abaixo est\u00e3o dispon\u00edveis em <code>/product</code>.</p>"},{"location":"product/#product-service","title":"Product Service","text":"<p>Microsservi\u00e7o Product</p> <p>Contexto Este microsservi\u00e7o exp\u00f5e recursos REST para cadastro e consulta de produtos de uma loja. Ele \u00e9 consumido exclusivamente pelo Gateway e requer um JWT v\u00e1lido via:</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre> Stack Detalhes Linguagem Java 17 Framework Spring Boot 3 + Spring Web Persist\u00eancia Spring Data JPA \u2192 PostgreSQL (<code>schema product</code>) Migra\u00e7\u00e3o Flyway (<code>db/migration</code>) Cache Spring Cache + Redis Build Maven + Docker multi-stage"},{"location":"product/#arquitetura","title":"Arquitetura","text":"<pre><code>classDiagram\n    ProductResource --&gt; ProductService\n    ProductService --&gt; ProductRepository\n    ProductRepository --&gt; ProductModel\n    ProductModel &lt;.. Product  : parse/mapper\n</code></pre>"},{"location":"product/#post-product-criar-produto","title":"POST <code>/product</code> \u2013 Criar Produto","text":"Requisi\u00e7\u00e3o <pre><code>POST /product\nContent-Type: application/json\n\n{\n  \"name\": \"Tomato\",\n  \"price\": 10.12,\n  \"unit\": \"kg\"\n}\n</code></pre> Resposta <code>200 OK</code> <pre><code>{\n  \"id\": \"0195abfb-7074-73a9-9d26-b4b9fbaab0a8\",\n  \"name\": \"Tomato\",\n  \"price\": 10.12,\n  \"unit\": \"kg\"\n}\n</code></pre> <p>Print</p> <p></p>"},{"location":"product/#get-product-listar-produtos","title":"GET <code>/product</code> \u2013 Listar Produtos","text":"Requisi\u00e7\u00e3o <pre><code>GET /product\n</code></pre> Resposta <code>200 OK</code> <pre><code>[\n  {\n    \"id\": \"0195abfb-7074-73a9-9d26-b4b9fbaab0a8\",\n    \"name\": \"Tomato\",\n    \"price\": 10.12,\n    \"unit\": \"kg\"\n  },\n  {\n    \"id\": \"0195abfe-e416-7052-be3b-27cdaf12a984\",\n    \"name\": \"Cheese\",\n    \"price\": 0.62,\n    \"unit\": \"slice\"\n  }\n]\n</code></pre> <p>Print</p> <p></p>"},{"location":"product/#get-productid-buscar-por-id","title":"GET <code>/product/{id}</code> \u2013 Buscar por ID","text":"Requisi\u00e7\u00e3o <pre><code>GET /product/0195abfb-7074-73a9-9d26-b4b9fbaab0a8\n</code></pre> Resposta <code>200 OK</code> <pre><code>{\n  \"id\": \"0195abfb-7074-73a9-9d26-b4b9fbaab0a8\",\n  \"name\": \"Tomato\",\n  \"price\": 10.12,\n  \"unit\": \"kg\"\n}\n</code></pre> <p>Print</p> <p></p>"},{"location":"product/#delete-productid-remover-produto","title":"DELETE <code>/product/{id}</code> \u2013 Remover Produto","text":"Requisi\u00e7\u00e3o <pre><code>DELETE /product/0195abfb-7074-73a9-9d26-b4b9fbaab0a8\n</code></pre> Resposta <code>204 No Content</code> <p>Sem corpo.</p> <p>Print</p> <p></p>"},{"location":"product/#get-productwhoami-debug","title":"GET <code>/product/whoami</code> \u2013 Debug","text":"Requisi\u00e7\u00e3o <pre><code>GET /product/whoami\nid-product: 0195abfb-7074-73a9-9d26-b4b9fbaab0a8\n</code></pre> Resposta <code>200 OK</code> <pre><code>{\n  \"id\": \"0195abfb-7074-73a9-9d26-b4b9fbaab0a8\",\n  \"name\": \"Tomato\",\n  \"price\": 10.12,\n  \"unit\": \"kg\"\n}\n</code></pre> <p>Print</p> <p>(Adicionar imagem aqui)</p>"},{"location":"product/#autenticacao","title":"Autentica\u00e7\u00e3o","text":"<p>JWT obrigat\u00f3rio</p> <p>Todas as chamadas devem conter o token JWT no header:</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre> <p>\u00daltima atualiza\u00e7\u00e3o: <code>ProductController.java</code></p>"},{"location":"testedecarga/","title":"Testes de Carga \u2013 HPA e M\u00e9tricas","text":"<p>Testes de carga foram aplicados para simular m\u00faltiplos acessos simult\u00e2neos \u00e0 aplica\u00e7\u00e3o. O foco \u00e9 observar o comportamento do autoscaler (HPA) e o impacto no uso de recursos.</p> <p>Execu\u00e7\u00e3o do Teste</p> <p>Veja no v\u00eddeo abaixo a execu\u00e7\u00e3o do teste de carga junto com a visualiza\u00e7\u00e3o do <code>kubectl get hpa</code> e o escalonamento dos pods em tempo real.</p> <ul> <li>O <code>HPA</code> come\u00e7a com 1 pod e escala at\u00e9 5 conforme o uso de CPU.</li> <li>O Prometheus monitora as m\u00e9tricas de forma cont\u00ednua.</li> <li>O Grafana exibe visualmente o comportamento da aplica\u00e7\u00e3o.</li> </ul> <p></p> <p>link: https://www.youtube.com/watch?v=ImXXUg53QGA&amp;ab</p> <p>\u00daltima execu\u00e7\u00e3o: 2025-06-03</p>"}]}